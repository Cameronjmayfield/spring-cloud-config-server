name: CI

on:
  push:

env:
  IMAGE_NAME: test
  IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/${{ IMAGE_NAME }}

jobs:
  gradle-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Build docker image
        run: docker build -t $IMAGE_ID .

  verify-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Test with remote git repo
        run: |
          docker pull $IMAGE_ID
          docker tag $IMAGE_ID hyness/spring-cloud-config-server
          docker-compose -f examples/git/docker-compose.yml up -d
          timeout 30 sh -c "until curl -o /dev/null -Isf localhost:8881/foo/development; do printf '.' && sleep 1; done"
          timeout 30 sh -c "until curl -o /dev/null -Isf localhost:8882/foo/development; do printf '.' && sleep 1; done"
          timeout 30 sh -c "until curl -o /dev/null -Isf localhost:8883/foo/development; do printf '.' && sleep 1; done"
          curl localhost:8881/foo/development | jq '.propertySources[0]' | jq 'contains({name: "https://github.com/spring-cloud-samples/config-repo/foo-development.properties"})'
          curl localhost:8882/foo/development | jq '.propertySources[0]' | jq 'contains({name: "https://github.com/spring-cloud-samples/config-repo/foo-development.properties"})'
          curl localhost:8883/foo/development | jq '.propertySources[0]' | jq 'contains({name: "https://github.com/spring-cloud-samples/config-repo/foo-development.properties"})'
